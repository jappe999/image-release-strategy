name: Release

on:
  push:
    branches: [main]
  release:
    # Note: a current limitation is that when a release is edited after publication, then the Docker tags are not automatically updated.
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      is-head-master: ${{ steps.is-head-master.outcome == 'success' }}
      is-latest-release: ${{ steps.is-latest-release.outcome == 'success' }}
    steps:
      - name: Check whether this event is the HEAD of master
        continue-on-error: true
        id: is-head-master
        run: git rev-parse HEAD | grep -x ${{ github.sha }}
        shell: bash

      - name: Check whether the release is latest
        continue-on-error: true
        id: is-latest-release
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release view --json tagName --jq .tagName | grep -x ${{ github.event.release.tag_name }}
        shell: bash

  publish-docker-image:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set version
        id: version
        run: |
          GITHUB_VERSION=${GITHUB_REF##*v}
          echo "version=${GITHUB_VERSION}" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
            type=edge,enable=${{ needs.prepare.outputs.is-head-master == 'true' }}
            type=raw,value=latest,enable=${{ needs.prepare.outputs.is-latest-release == 'true' }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container and push to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ startsWith(steps.version.outputs.version, 'refs/heads') && 'edge' || steps.version.outputs.version }}
